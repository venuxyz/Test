package routines;

import java.text.ParseException;
import javax.swing.text.MaskFormatter;


/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
import java.util.regex.Pattern;

@SuppressWarnings("unused")
public class zipcode1 {
    
    static final String regex = "^/d{5}(-/d{4})?$";
 
       public static void main(String[] args) {
 
        String mixedZips[] = {  "50266-234A", "50266-2342", "5026A-2344",
                                "5026A-234A", "50266", "230" };
 
        int index = 0;
        boolean isMatch = false;
        while (index < mixedZips.length) {
            isMatch = isAValidZipCode(mixedZips[index]);
            System.out.println("Zip " + mixedZips[index] + " - "
                    + (isMatch ? "Valid" : "Invalid"));
            index++;
        }
 
    }
     
        public static boolean isAValidZipCode(String zip) {
        return Pattern.matches(regex, zip);
    }
 
}